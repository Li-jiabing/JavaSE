package com.company.day05;

/**
 * 1.循环结构
 * 在程序当中，总有一写代码需要反复/重复执行，假设没有循环结构，
 * 那么这段需要重复执行的代码自然是需要重复编写的，代码无法得到重复
 * 使用。所以多数编程语言都是支持循环结构的，将来把需要反复执行的代码片段放到
 * 循环体，再联合计数器，共同控制这段需要反复执行的代码
 * 2.基本上所有的编程语言支持的循环包括三种：
 * *for循环
 * *while循环
 * *do...while循环
 * <p>
 * 3.当前事例主要讲解for循环，for循环的语法结构是什么呢？
 * 语法结构：
 * for(初始化表达式；布尔表达式；更新表达式){
 * //是需要重复执行的代码片段[循环体：由java语句构成]
 * }
 * <p>
 * 4.for循环的执行过程/执行原理[*****]
 * 4.1、初始化表达式、布尔表达式、更新完成式都不是必须的！【但是两个分号是必须的】
 * 4.2、初始化表达式是最先执行的，并且在整个for循环中只执行一次。
 * 4.3、布尔表达式必须是true/false，不能是其他值
 * 4.4、for的执行过程：
 * *先执行初始化表达式，并且该表达式只执行一次
 * *判断布尔表达式的结果是true还是false
 * -布尔表达式true
 * *执行循环体
 * *执行更新表达式
 * *判断布尔表达式的结果是true还是false
 * -布尔表达式true
 * *执行循环体
 * *执行更新表达式
 * *判断布尔表达式的结果是true还是false
 * -布尔表达式true
 * *执行循环体
 * *执行更新表达式
 * *判断布尔表达式是true还是false
 * -......
 * -布尔表达式false
 * -布尔表达式false
 * *循环结束
 */
public class ForTest01 {
    public static void main(String[] args) {
//        //需求：输出数字1-10
//        for (int i = 1;i<=10;i++){
//            System.out.println(i);
//        }

        /**
         *      1*1=1
         *      1*2=2   2*2=4
         *      1*3=3   2*3=6   3*3=9
         *      1*4=4   2*4=8   3*4=12  4*4=16
         *      1*5=5   2*5=10  3*5=15  4*5=20  4*6=24
         *      1*6=6   2*6=12  3*6=18  4*6=24  5*6=30  6*6=36
         *      1*7=7   2*7=14  3*7=21  4*7=28  5*7=35  6*7=42  7*7=49
         *      1*8=8   2*8=16  3*8=24  4*8=32  5*8=40  6*8=48  7*8=56  8*8=64
         *      1*9=9   2*9=18  3*9=27  4*9=36  5*9=45  6*9=54  7*9=63  8*9=72  9*9=81
         */
        for(int i = 1;i <= 9;i++){
            for(int j=1;j <=i;j++){
                System.out.print(i+"*"+j+"="+(i*j)+"\t");
                if (i == j) {
                    System.out.println("\n");
                }
            }
        }
    }
}
